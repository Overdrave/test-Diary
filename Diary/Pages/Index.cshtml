@page
@model IndexModel
@{
    ViewData["Title"] = "Diary";



}

@functions
{
    private async Task DrawCalendar(DateTime selectedDate)
    {
        if (selectedDate.Year < 2010)
        {
            Model.dateFrom = DateTime.Now.Date;
            Model.dateTo = Model.dateFrom.AddDays(1);
            selectedDate = Model.dateFrom;
        }
        //Каждая кнопка даты по сути представляет собой установку фильтров: С 0 часов выбранного дня до 0 часов следующего дня
        string monthStr = selectedDate.ToString("MMMM");
        int year = selectedDate.Year;
        DateTime firstDayOfMonth = new DateTime(selectedDate.Year, selectedDate.Month, 1);
        var dayOfWeek = firstDayOfMonth.DayOfWeek;
        /* Находим первый день для отображения: вычитаем из первого дня месяца количество дней от начала недели*/
        DateTime startDaysFrom = firstDayOfMonth.AddDays(-(((int)dayOfWeek - 1 + 7) % 7));
        if (startDaysFrom.Day == firstDayOfMonth.Day)
        {
            startDaysFrom = startDaysFrom.AddDays(-7);
        }

        <div class="calendar currentMonth">
            <a href="/Index?dateFrom=@firstDayOfMonth.ToString("yyyy-MM-ddTHH:mm")&dateTo=@firstDayOfMonth.AddMonths(1).ToString("yyyy-MM-ddTHH:mm")" target="_self">
                @monthStr, @year
            </a>

        </div>
        <table width="100%" class="calendar" cellspacing="0" cellpadding="4" border="1">
            <tr>
                <th class="padding"> </th>
                <th class="workday">Пн</th>
                <th class="workday">Вт</th>
                <th class="workday">Ср</th>
                <th class="workday">Чт</th>
                <th class="workday">Пт</th>
                <th class="weekend">Сб</th>
                <th class="weekend">Вс</th>
                <th class="padding"> </th>
            </tr>

            @{
                for (int i = 0; i < 6; i++)
                {
                    <tr>
                        @{DateTime dayStartingWeek = startDaysFrom.AddDays(i * 7);}
                        <td class="padding">
                            <a href="/Index?dateFrom=@dayStartingWeek.ToString("yyyy-MM-ddTHH:mm")&dateTo=@dayStartingWeek.AddDays(7).ToString("yyyy-MM-ddTHH:mm")" target="_self">
                                <img src="" />
                            </a>
                        </td>
                        @for (int j = 0; j < 7; j++)
                        {
                            var cellClass = (j > 4) ? "weekend" : "workday";
                            var thisday = startDaysFrom.AddDays(i * 7 + j);
                            cellClass += (thisday.Month != selectedDate.Month) ? " otherMonth" : "";


                            <td class="@cellClass" value=@thisday.ToString("yyyy-MM-ddTHH:mm")>
                                <a href="/Index?dateFrom=@thisday.ToString("yyyy-MM-ddTHH:mm")&dateTo=@thisday.AddDays(1).ToString("yyyy-MM-ddTHH:mm")" target="_self">
                                    <p>@thisday.Day.ToString()</p>
                                    @{string entriesToday = "(" + Model.context.Entries.ToList().FindAll(x => x.dateStart <= thisday.AddDays(1) && x.dateStart >= thisday).Count.ToString() + ")";
                                        if (entriesToday == "(0)")
                                            entriesToday = "";
                                    }
                                    <p>@entriesToday</p>
                                </a>
                            </td>

                        }
                        <td class="padding">
                            <a href="/Index?dateFrom=@dayStartingWeek.ToString("yyyy-MM-ddTHH:mm")&dateTo=@dayStartingWeek.AddDays(7).ToString("yyyy-MM-ddTHH:mm")" target="_self">
                                <img src="" />
                            </a>
                        </td>
                    </tr>
                }
            }

        </table>
    }

    private async Task DrawFormAddEntry()
    {
        <div class="form">
            <form id="formAddEntry" method="post">
                <h3>Новая заметка</h3>
                <div class="data">
                    <div>
                        <label>Тип заметки</label>
                        <select name="entryType">
                            <option value="0">Памятка</option>
                            <option value="1">Встреча</option>
                            <option value="2">Дело</option>
                        </select>
                    </div>
                    <div>
                        <label>Название</label>
                        <input name="entrySubject" required />
                    </div>
                    <div>
                        <label>Комментарий</label>
                        <textarea name="entryDetails" cols="80" rows="5"></textarea>
                    </div>
                    <div>
                        <label>Дата начала</label>
                        <input type="datetime-local" name="entryDateFrom" value=@Model.dateFrom.ToString("yyyy-MM-ddTHH:mm") required />
                    </div>
                    <div>
                        <label>Дата завершения</label>
                        <input type="datetime-local" name="entryDateTo" />
                    </div>
                    <div>
                        <label>Место</label>
                        <input name="entryPlace" />
                    </div>
                    <input type="submit" asp-page-handler="Add" value="Добавить событие" />
                </div>
            </form>
        </div>

        <p />
    }

    private async Task DrawFormApplyFilters()
    {
        <form id="formFilters" method="get">
            <h5> Фильтры: </h5>
            <div class="data">
                <div>
                    <label>C </label>
                    <input type="datetime-local" name="dateFrom" value=@Model.dateFrom.ToString("yyyy-MM-ddTHH:mm") />
                    <label> по </label>
                    <input type="datetime-local" name="dateTo" value=@Model.dateTo.ToString("yyyy-MM-ddTHH:mm") />
                </div>

                <div>
                    <label>Отображать памятки</label>
                    <select name="allowNotes">
                        <option value="1" selected=@Model.allowNotes>Да</option>
                        <option value="0" selected=@(!Model.allowNotes)>Нет</option>
                    </select>
                </div>
                <div>
                    <label>Отображать встречи</label>
                    <select name="allowMeetings">
                        <option value="1" selected=@(Model.allowMeetings)>Да</option>
                        <option value="0" selected=@(!Model.allowMeetings)>Нет</option>
                    </select>
                </div>
                <div>
                    <label>Отображать дела</label>
                    <select name="allowTasks">
                        <option value="1" selected=@(Model.allowTasks)>Да</option>
                        <option value="0" selected=@(!Model.allowTasks)>Нет</option>
                    </select>
                </div>
                <div>
                    <label>Поиск: </label>
                    <input name="searchPattern"></input>
                </div>
                <input type="submit" value="Применить фильтры" />
            </div>
        </form>
    }

    private async Task DrawTaskList(DateTime dFrom, DateTime dTo)
    {
        /*<label> Выбрано @dFrom по @dTo </label> */

        <p />
        <h3>Запланированные события</h3>

        <table border="1" width="100%" cellspacing="0" cellpadding="4">
            @{
                if (Model.entries != null)
                    foreach (var entry in Model.entries)
                    {
                        string typeStr = "Памятка";
                        DateTime dateF = DateTime.Now;
                        bool useDateTo = false;
                        bool usePlace = false;
                        if (entry is DBModel.Meeting)
                        {
                            typeStr = "Встреча";
                            useDateTo = true;
                            usePlace = true;
                            dateF = ((DBModel.Meeting)entry).dateFinish;
                        }
                        else if (entry is DBModel.Task)
                        {
                            typeStr = "Дело";
                            useDateTo = true;
                            dateF = ((DBModel.Task)entry).dateFinish;
                        }
                        else
                        {

                        }

                        <tr>
                            <form id="EditOrDelete" method="post">

                                @*Передаём фильтры через запрос. Ужасно, да.*@
                                <input name="id" value=@entry.ID type="hidden" />
                                <input name="dateFrom" value=@dFrom.ToString("yyyy-MM-ddTHH:mm") type="hidden" />
                                <input name="dateTo" value=@dTo.ToString("yyyy-MM-ddTHH:mm") type="hidden" />
                                <input name="allowNotes" value=@(Model.allowNotes ? 1: 0) type="hidden" />
                                <input name="allowTasks" value=@(Model.allowTasks ? 1: 0) type="hidden" />
                                <input name="allowMeetings" value=@(Model.allowMeetings ? 1: 0) type="hidden" />

                                @*-------------"Выполненность"--------------*@
                                @{string done = entry.Done ? "✓" : " ";}
                                <td class="done" style="min-width:50px; text-align:center">
                                    @*<p>@done</p>*@
                                    <p><input type="submit" asp-page-handler="Done" value="@done" style="min-width:30px" /></p>
                                </td>

                                @*----------------Даты--------------------*@
                                <td colspan="@(useDateTo ? 1 : 2)">
                                    <p>@entry.dateStart</p>
                                    <input type="datetime-local" name="newDateFrom" value=@entry.dateStart.ToString("yyyy-MM-ddTHH:mm") />
                                </td>

                                @if (useDateTo)
                                {
                                    <td>
                                        <p>@dateF</p>
                                        <input type="datetime-local" name="newDateTo" value=@dateF.ToString("yyyy-MM-ddTHH:mm") />
                                    </td>
                                }

                                @*--------------------Тема---------------------*@
                                <td>
                                    <textarea name="newSubject" rows="3">@entry.Subject</textarea>
                                </td>

                                @*----------------Комментарий--------------------*@
                                <td colspan="@(usePlace ? 1 : 2)">
                                    <h5> Комментарий: </h5>
                                    <p> <textarea name="newDetails" rows="3">@entry.Details</textarea> </p>
                                </td>

                                @*----------------Место встречи--------------------*@
                                @if (usePlace)
                                {
                                    <td>
                                        <h5> Место встречи: </h5>
                                        <p><textarea name="newPlace" rows="2">@(((DBModel.Meeting)entry).Place)</textarea> </p>
                                    </td>
                                }

                                @*----------------Действия--------------------*@
                                <td>
                                    <p><input type="submit" asp-page-handler="Edit" value="Изменить" /></p>
                                    <p><input type="submit" asp-page-handler="Delete" value="Удалить" /></p>
                                </td>
                            </form>
                        </tr>
                    }
            }
        </table>

    }


}


<h1 class="display-4">Приложение "Ежедневник"</h1>
<h5>@Model.message</h5>
@{
    DateTime dateFrom = Model.dateFrom;
    DateTime dateTo = Model.dateTo;
    await DrawCalendar(dateFrom);
    await DrawFormAddEntry();
    await DrawFormApplyFilters();
    await DrawTaskList(dateFrom, dateTo);
}


